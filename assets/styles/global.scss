@import './font.css';

@tailwind base;
@tailwind components;
@tailwind utilities;



@layer components {
    .app-container {
        @apply mx-auto w-full max-w-[1920px] px-5 sm:px-8 md:px-10 lg:px-[125px] xl:px-[160px] 2xl:px-[240px] 3xl:px-[310px];
    }

    .app-container-full {
        @apply mx-auto w-full max-w-[1920px];
    }

    .app-container-slider {
        @apply mx-auto max-w-[1920px] ps-5 sm:ps-8 md:px-10 lg:px-[125px] xl:px-[160px] 2xl:px-[240px] 3xl:px-[310px];
    }

    .app-container-full-width-mobile {
        @apply mx-auto px-0 sm:px-8 md:px-10 lg:px-[125px] xl:px-[160px] 2xl:px-[240px] 3xl:px-[310px];
    }

    .responsive-text {
        //   @apply text-xs sm:text-sm lg:text-base;
        @apply text-[clamp(0.875rem,_2.5vw,_1rem)];
    }

    .skeleton {
        @apply animate-pulse bg-gray-400/30;
    }

    .center-element {
        @apply absolute left-[50%] top-[50%] translate-x-[-50%] translate-y-[-50%];
    }

    .doted-overflow {
        @apply overflow-hidden overflow-ellipsis whitespace-nowrap;
    }

    .general-input {
        @apply w-full rounded-[5px] border border-[#E6E6E6] bg-transparent px-2.5 py-3 text-[0.9rem] outline-none focus:border-blue-500 sm:text-[.8rem];
    }

    .no-data {
        @apply absolute top-[50%] -translate-x-[1%] translate-y-[-50%] scale-100 text-base text-gray-400;
    }

    .data-exist-or-focused {
        @apply absolute -top-2.5 start-2 -translate-x-[1%] translate-y-0 scale-75 bg-white font-medium text-[var(--main-blue-color)] transition-all peer-focus:-top-2.5 peer-focus:-translate-x-1/4 peer-focus:translate-y-0 peer-focus:scale-75 peer-focus:text-[var(--main-blue-color)];
    }

    .placeholder-shown {
        @apply absolute peer-placeholder-shown:top-[50%] peer-placeholder-shown:-translate-x-[1%] peer-placeholder-shown:translate-y-[-50%] peer-placeholder-shown:scale-90 peer-placeholder-shown:text-base peer-placeholder-shown:text-gray-400;
    }

    .data-exist-or-focused-input-label {
        @apply absolute -top-2.5 start-2 -translate-x-[1%] translate-y-0 scale-75 bg-white font-medium text-[var(--main-blue-color)] transition-all peer-focus:-top-2.5 peer-focus:-translate-x-[1%] peer-focus:translate-y-0 peer-focus:scale-75 peer-focus:text-[var(--main-blue-color)];
    }
}

@layer utilities {
    .no-scrollbar::-webkit-scrollbar {
        display: none;
    }

    .no-scrollbar {
        -ms-overflow-style: none;
        scrollbar-width: none;
    }
    .sidebar-animation {
        transition:
            transform 200ms allow-discrete,
            display 200ms allow-discrete,
            opacity 200ms allow-discrete,
            overlay 200ms allow-discrete;

        //at close
        opacity: 0;
        transform: translateX(-100%); // Move out to the left
        //at open
        &:popover-open {
            opacity: 1;
            transform: translateX(0);
        }
    }

    [dir="rtl"] .sidebar-animation {
        //at close
        transform: translateX(100%);
        //at open
        &:popover-open {
            transform: translateX(0);
        }
    }
}

@layer base {
    html {
        font-family: "Montserrat", sans-serif, "poppins", Helvetica, sans-serif;
    }
}

:root {
    --main-header-height: 90px;
    --main-footer-height: 100px;
    --main-content-height: calc(
        100vh - var(--main-footer-height) 
    ); //in case of header not fixed use this calc(100vh -var(--main-header-height) - var(--main-footer-height));

    overflow-y: auto;

    //generic
    --pr-text: #000000;
    --error-clr: "red";
    --bg-error-clr: rgb(241 18 55 / 0.05);
    //website
    --pr-bg: #F3F7FC  ;
    --sec-bg: black; //sec---secondary
    --tr-bg: white; //tr---Tertiary
    --default-bg: white;

    //desgin system colors
    --primary-clr: #eaa121;
    --primary-clr-50: color-mix(in srgb, var(--primary-clr) 50%, #0000 15%);
    --primary-clr-15: color-mix(in srgb, var(--primary-clr) 15%, #0000 15%);
}

[data-theme="dark"] {
    //generic
    --pr-text: white;
    //website
    --pr-bg: #F3F7FC  ;
    --sec-bg: #27272a; //#2F333A
    --tr-bg: #27272a; //#2F333A
    --default-bg: #1c1917;
}

* {
    padding: 0;
    margin: 0;
    -webkit-text-size-adjust: 100%;
    @apply transition-colors duration-200; //for smooth transition for toggling theme
}

*,
*:before,
*:after {
    box-sizing: border-box;
}

body {
    height: 100%;
    width: 100%;
    min-width: 230px;
    background-color: var(--white);
    overflow: hidden;
}

// global classes
.img-gradient-filter {
    position: relative;
    overflow: hidden;
}
th,
td,
th + div {
    text-align: center;
}

.adaptive-height-section {
    height: 100vh;
    overflow-y: scroll;
    scroll-snap-type: y mandatory;
}

.img-gradient-filter::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
    height: 100%;
    background: linear-gradient(
        90deg,
        rgba(19, 19, 19, 0.6) 13.04%,
        rgba(22, 19, 19, 0.6) 13.05%,
        rgba(241, 18, 55, 0.6) 100%
    ); // filter: blur(10px); /* Adjust blur radius as needed */
}

.multi-lines-text {
    white-space: pre-line;
    word-break: break-word;
}

.scroll {
    ::-webkit-scrollbar {
        width: 0.7em;
    }

    ::-webkit-scrollbar-track {
        border-radius: 100px;
        background-color: rgba(169, 169, 169, 0.141);
    }
    ::-webkit-scrollbar-thumb {
        background-color: #a9a9a97a;
        /*background-image: linear-gradient(180deg, #453ed1 0%, #708ad4 99%);*/
        border-radius: 100px; /*thumb border-radius*/

        background-clip: content-box; /*to make border control thumb width*/
        border: 2px solid transparent; /*thumb width*/
    }

    // font-size: clamp(0.4rem, 90%, 1rem);
}

.products-list-container {
    list-style: none;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(50px, 237px));
    grid-row-gap: 1.2rem;
    grid-column-gap: 0.95rem;
    justify-content: center;
    @media (max-width: 810px) {
        grid-template-columns: repeat(auto-fill, minmax(190px, 150px));
    }
    @media (max-width: 620px) {
        grid-template-columns: repeat(auto-fill, minmax(140px, 150px));
    }
    @media (max-width: 280px) {
        grid-template-columns: repeat(auto-fill, minmax(190px, 150px));
    }
}
input:-webkit-autofill,
input:-webkit-autofill:focus {
    transition:
        background-color 600000s 0s,
        color 600000s 0s;
}

.tooltip {
    position: relative;
    display: inline-block;
    border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: #555;
    color: #fff;
    text-align: center;
    border-radius: 6px;
    padding: 5px 0;
    position: absolute;
    z-index: 1;
    bottom: 125%;
    left: 50%;
    margin-left: -60px;
    opacity: 0;
    transition: opacity 0.3s;
}

.tooltip .tooltiptext::after {
    content: "";
    position: absolute;
    top: 100%;
    left: 50%;
    margin-left: -5px;
    border-width: 5px;
    border-style: solid;
    border-color: #555 transparent transparent transparent;
}

.tooltip:hover .tooltiptext {
    visibility: visible;
    opacity: 1;
}

.modal-animation {
    /*styling when dialog close*/
    opacity: 1;
    // transform: translateY(100vh);
    transition: all 0.3s allow-discrete;
}

//----------------------------------------------
.dialog-animation {
    /*styling when dialog close*/
    opacity: 0;
    // transform: translateY(100vh);
    transition: all 0.3s allow-discrete;

    &::backdrop {
        opacity: 0;
        transition: all 0.5s allow-discrete;
    }

    &[open] {
        /*styling when dialog open*/
        opacity: 1;

        // transform: translateY(0);
        &::backdrop {
            opacity: 1;
        }
    }
}

@starting-style {
    .dialog-animation {
        &[open] {
            /*styling when transition form close to open ---> is the styling when dialog close*/
            opacity: 0;

            // transform: translateY(100vh);
            &::backdrop {
                opacity: 0;
            }
        }
    }
}
//----------------------------------------------

.popover-animation {
    /*styling when dialog close*/
    opacity: 0;
    transform: translateY(100vh);
    transition: opacity 0.3s allow-discrete;

    &::backdrop {
        opacity: 0;
        transition: opacity 0.5s allow-discrete;
    }

    &:popover-open {
        /*styling when dialog open*/
        opacity: 1;

        transform: translateY(0);
        &::backdrop {
            opacity: 1;
        }
    }
}

@starting-style {
    .popover-animation {
        &:popover-open {
            /*styling when transition form close to open ---> is the styling when dialog close*/
            opacity: 0;

            transform: translateY(100vh);
            &::backdrop {
                opacity: 0;
            }
        }
    }
}
